// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using StoryTeller.Portal.Db;
using System;

namespace StoryTeller.Portal.Db.Migrations
{
    [DbContext(typeof(ResultsDbContext))]
    partial class ResultsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("Storyteller.Portal.Db.Model.App", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ApiKey");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Apps");
                });

            modelBuilder.Entity("Storyteller.Portal.Db.Model.Run", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AppId");

                    b.Property<string>("Name");

                    b.Property<DateTime>("RunDateTime");

                    b.HasKey("Id");

                    b.HasIndex("AppId");

                    b.ToTable("Runs");
                });

            modelBuilder.Entity("Storyteller.Portal.Db.Model.RunResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("HtmlResults");

                    b.Property<int?>("RunId");

                    b.HasKey("Id");

                    b.HasIndex("RunId");

                    b.ToTable("RunResults");
                });

            modelBuilder.Entity("Storyteller.Portal.Db.Model.RunSpec", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Passed");

                    b.Property<int?>("RunId");

                    b.Property<int?>("SpecId");

                    b.HasKey("Id");

                    b.HasIndex("RunId");

                    b.HasIndex("SpecId");

                    b.ToTable("RunSpecs");
                });

            modelBuilder.Entity("Storyteller.Portal.Db.Model.Spec", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AppId");

                    b.Property<string>("Name");

                    b.Property<Guid>("StorytellerId");

                    b.HasKey("Id");

                    b.HasIndex("AppId");

                    b.ToTable("Specs");
                });

            modelBuilder.Entity("Storyteller.Portal.Db.Model.Run", b =>
                {
                    b.HasOne("Storyteller.Portal.Db.Model.App", "App")
                        .WithMany()
                        .HasForeignKey("AppId");
                });

            modelBuilder.Entity("Storyteller.Portal.Db.Model.RunResult", b =>
                {
                    b.HasOne("Storyteller.Portal.Db.Model.Run", "Run")
                        .WithMany()
                        .HasForeignKey("RunId");
                });

            modelBuilder.Entity("Storyteller.Portal.Db.Model.RunSpec", b =>
                {
                    b.HasOne("Storyteller.Portal.Db.Model.Run", "Run")
                        .WithMany()
                        .HasForeignKey("RunId");

                    b.HasOne("Storyteller.Portal.Db.Model.Spec", "Spec")
                        .WithMany()
                        .HasForeignKey("SpecId");
                });

            modelBuilder.Entity("Storyteller.Portal.Db.Model.Spec", b =>
                {
                    b.HasOne("Storyteller.Portal.Db.Model.App", "App")
                        .WithMany()
                        .HasForeignKey("AppId");
                });
#pragma warning restore 612, 618
        }
    }
}
